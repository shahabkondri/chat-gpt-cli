name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  native_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            image_name: chat-gpt-cli-macos-intel
          - os: ubuntu-latest
            image_name: chat-gpt-cli-linux64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up GraalVM with Native Image
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Native Image
        run: gu install native-image

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build native image
        run: ./mvnw -Pnative native:compile

      - name: Upload native image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: chat-gpt-cli-${{ matrix.os }}
          path: target/chat-gpt-cli
          
  create_release:
    permissions: write-all
    needs: native_build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download and upload native images
      run: |
        for image_name in chat-gpt-cli-macos-intel chat-gpt-cli-linux-x64; do
          echo "Downloading and uploading ${image_name}"
          wget -O ${image_name} https://github.com/${{ github.repository }}/actions/artifacts/${{ github.run_id }}/${image_name}/0
          gh release upload ${{ github.ref }} ${image_name}
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
