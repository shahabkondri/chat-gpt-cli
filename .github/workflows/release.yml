name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  jar_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: chat-gpt-cli-jar
          path: target/chat-gpt-cli-*.jar

  native_build:
    needs: jar_build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_name: chat-gpt-cli-macos-intel
          - os: ubuntu-latest
            artifact_name: chat-gpt-cli-linux64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GraalVM with Native Image
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Native Image
        run: gu install native-image

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build native image
        run: ./mvnw -Pnative native:compile

      - name: Upload native image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: target/chat-gpt-cli

  create_release:
    needs: native_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract tag name
        id: extract_tag
        run: |
          echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: ${{ steps.extract_tag.outputs.tag }}
          release_name: Release ${{ steps.extract_tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: chat-gpt-cli-jar
          path: artifacts/chat-gpt-cli-jar

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: chat-gpt-cli-macos-intel
          path: artifacts/chat-gpt-cli-macos-intel

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: chat-gpt-cli-linux64
          path: artifacts/chat-gpt-cli-linux64

      - name: Upload native images and JAR to the release
        run: |
          cp artifacts/chat-gpt-cli-macos-intel/chat-gpt-cli artifacts/chat-gpt-cli-macos-intel/chat-gpt-cli-macos-intel
          cp artifacts/chat-gpt-cli-linux64/chat-gpt-cli artifacts/chat-gpt-cli-linux64/chat-gpt-cli-linux64

          gh release upload ${{ steps.extract_tag.outputs.tag }} \
            artifacts/chat-gpt-cli-macos-intel/chat-gpt-cli-macos-intel \
            artifacts/chat-gpt-cli-linux64/chat-gpt-cli-linux64

          for jar_file in artifacts/chat-gpt-cli-jar/chat-gpt-cli-*.jar; do
            echo "Uploading ${jar_file}"
            gh release upload ${{ steps.extract_tag.outputs.tag }} "${jar_file}"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
